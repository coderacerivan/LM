<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCyRXhpZgAATU0AKgAAAAgABwE+AAUAAAACAAAAYgE/AAUAAAAG
        AAAAcgMBAAUAAAABAAAAogMDAAEAAAABAAAAAFEQAAEAAAABAQAAAFERAAQAAAABAAAAAFESAAQAAAAB
        AAAAAAAAAAAAAHomAAGGoAAAgIQAAYagAAD6AAABhqAAAIDoAAGGoAAAdTAAAYagAADqYAABhqAAADqY
        AAGGoAAAF3AAAYagAAGGoAAAsY//2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABkAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3yx057m4WaUt5cWWbJ9O1fP8A+3Jqb3XjPwuxYrvWTaAegxXp
        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
        UUV1YrEVY1pKMmlfuzbB4elKjFyir27I/9k=
</value>
  </data>
</root>